Title: Password Prompt Option
Author: Eric Pruitt (https://www.codevat.com/, https://github.com/ericpruitt/)

Adds a new command line option ("-g") that turns dmenu into a password prompt.

diff --git a/dmenu.c b/dmenu.c
index 8e84fbd..0659fe3 100644
--- a/dmenu.c
+++ b/dmenu.c
@@ -34,6 +34,8 @@ struct item {
 };
 
 static char text[BUFSIZ] = "";
+static char asterisks[sizeof text] = "";
+static char passwordentry = 0;
 static int bh, mw, mh;
 static int sw, sh; /* X display screen geometry width, height */
 static int inputw = 0, promptw;
@@ -56,6 +58,7 @@ static Clr *scheme[SchemeLast];
 
 static int (*fstrncmp)(const char *, const char *, size_t) = strncmp;
 static char *(*fstrstr)(const char *, const char *) = strstr;
+static size_t nextrune(int inc);
 
 static void
 appenditem(struct item *item, struct item **list, struct item **last)
@@ -128,9 +131,30 @@ drawitem(struct item *item, int x, int y, int w)
 static void
 drawmenu(void)
 {
+	char *textbuf = text;
 	unsigned int curpos;
+	size_t visualcursor = cursor;
+	size_t oldcursor, runecount;
 	struct item *item;
-	int x = 0, y = 0, w;
+	int visualcursorset = 0, x = 0, y = 0, w;
+
+	if (passwordentry) {
+		oldcursor = cursor;
+		for (cursor = runecount = 0; text[cursor] != '\0'; runecount++) {
+			asterisks[runecount] = '*';
+			if (cursor >= oldcursor && !visualcursorset) {
+				visualcursorset = 1;
+				visualcursor = runecount;
+			}
+			cursor = nextrune(+1);
+		}
+		if (!visualcursorset) {
+			visualcursor = runecount;
+		}
+		cursor = oldcursor;
+		asterisks[runecount] = '\0';
+		textbuf = asterisks;
+	}
 
 	drw_setscheme(drw, scheme[SchemeNorm]);
 	drw_rect(drw, 0, 0, mw, mh, 1, 1);
@@ -142,9 +166,9 @@ drawmenu(void)
 	/* draw input field */
 	w = (lines > 0 || !matches) ? mw - x : inputw;
 	drw_setscheme(drw, scheme[SchemeNorm]);
-	drw_text(drw, x, 0, w, bh, lrpad / 2, text, 0);
+	drw_text(drw, x, 0, w, bh, lrpad / 2, textbuf, 0);
 
-	drw_font_getexts(drw->fonts, text, cursor, &curpos, NULL);
+	drw_font_getexts(drw->fonts, textbuf, visualcursor, &curpos, NULL);
 	if ((curpos += lrpad / 2 - 1) < w) {
 		drw_setscheme(drw, scheme[SchemeNorm]);
 		drw_rect(drw, x + curpos, 2, 2, bh - 4, 1, 0);
@@ -619,6 +643,8 @@ main(int argc, char *argv[])
 			topbar = 0;
 		else if (!strcmp(argv[i], "-f"))   /* grabs keyboard before reading stdin */
 			fast = 1;
+		else if (!strcmp(argv[i], "-g"))   /* get password*/
+			passwordentry = 1;
 		else if (!strcmp(argv[i], "-i")) { /* case-insensitive item matching */
 			fstrncmp = strncasecmp;
 			fstrstr = cistrstr;
@@ -659,9 +685,13 @@ main(int argc, char *argv[])
 
 	if (fast) {
 		grabkeyboard();
-		readstdin();
+		if (!passwordentry) {
+			readstdin();
+		}
 	} else {
-		readstdin();
+		if (!passwordentry) {
+			readstdin();
+		}
 		grabkeyboard();
 	}
 	setup();
