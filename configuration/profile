#!/bin/sh

# The user profile and bashrc contain circular references to one another
# because different forms of accessing the system lead to different loading
# behaviors (an "*" indicates only part of the file is executed):
#
#   ssh $LOGNAME@$HOSTNAME:              ~/.profile -> ~/.bashrc
#   ssh $LOGNAME@$HOSTNAME "command...": ~/.bashrc* -> ~/.profile
#   X11 Session:                         ~/.profile
#   └─> GUI Terminal Emulator:           ~/.bashrc
#
# Since the profile modifies the PATH environment variable, it is always
# loaded, but the entirety of the bashrc is only loaded when Bash is running as
# an interactive shell.
test "$PROFILE_INCLUDE_GUARD" && return || export PROFILE_INCLUDE_GUARD="$$"

umask 077

export BC_ENV_ARGS="-l -q"
export BROWSER="google-chrome:firefox:chromium"
export BZIP2="-9"
export DOTNET_CLI_TELEMETRY_OPTOUT="1"
export EDITOR="vi"
export EMUS="$(dirname "$(dirname "$(readlink "$HOME/.profile")")")"
export EXINIT="set verbose smd ic ai sw=4 ts=4 | map gg 1G"
export GEM_HOME="$HOME/.gem"
export HOMEBREW_NO_EMOJI="1"
export LESS="iMRnj4"
export LZOP="-9"
export MANPATH="$HOME/.local/share/man:"
export MANSECT="3:3posix:2:1:l:7:8:5:4:9:6:3am:n:3pm:3perl"
export PAGER="less"
export POWERSHELL_TELEMETRY_OPTOUT="1"
export PYTHONIOENCODING="utf-8:surrogateescape"
export PYTHONSTARTUP="$HOME/.repl.py"
export TERMINFO="$HOME/.terminfo"
export UNAME="$(uname)"
export USER="$LOGNAME"
export WINEDLLOVERRIDES="winemenubuilder.exe=d"
export WINEPREFIX="/dev/null"
export XDG_CACHE_HOME="/tmp/xdg-cache-$LOGNAME"
export XZ_OPT="-9"
export _JAVA_AWT_WM_NONREPARENTING="1"

export RTSIG_MAX="$(getconf RTSIG_MAX)"
test "$RTSIG_MAX" != "undefined" || RTSIG_MAX=127

export VISUAL="$EDITOR"

export ETCPATHS="$(
    for path in $(cat /etc/paths /etc/paths.d/* 2>/dev/null); do
        case "$PATH" in
          ("$path"|"$path":*|*:"$path"|*:"$path":*) ;;
          (*) printf ":%s" "$path" ;;
        esac
    done
)"

export PATH="$HOME/bin:$EMUS/scripts:$HOME/.local/bin:$PATH$ETCPATHS"

# Secondary profile for machine-specific settings.
test -e "$HOME/.local.profile" && . "$HOME/.local.profile"

# Most variables and settings that depend on other programs are processed after
# the local profile since it may modify PATH.
export GIT_EDITOR="$(command -v "$EDITOR")"
export MAKEFLAGS="-j$(nproc 2>/dev/null || echo 4)"
export SHELL="$(command -v bash || echo "$SHELL")"

# Configure the default output format for ps(1). The width of the username
# column is set to that of the longest username in /etc/passwd.
export PS_FORMAT="$(
    awk < /etc/passwd -F ":" '
    BEGIN {
        # The initial width comes from the environment-defined username in case
        # the current user is not in /etc/passwd because of NSS / LDAP, etc.
        max = length(ENVIRON["LOGNAME"] ? ENVIRON["LOGNAME"] : ENVIRON["USER"])
    }
    $1 !~ /^#/ {
        max = length($1) > max ? length($1) : max
    }
    END {
        print "user:" (max > 0 ? max : 16) ",ppid,pid,stime,etime,comm,cmd"
    }'
)"

if [ "${WSL_DISTRO_NAME:+isset}" ]; then
    export WINDOWS_ENV_FILE="$HOME/.windows.env"
    wenv.ps1 > "$WINDOWS_ENV_FILE"
fi

# These are the same values that Debian's laptop-detect script uses to
# determine if a system is likely a laptop.
case "$(cat /sys/devices/virtual/dmi/id/chassis_type 2>/dev/null)" in
  8|9|10|11)
    export IS_LAPTOP="x"
  ;;
  *)
    export IS_LAPTOP=""
  ;;
esac

eval "$(dircolors -b "$HOME/.dircolors" 2>/dev/null)"
eval "$(jqcolors "$HOME/.jqcolors" 2>/dev/null)"
eval "$(lesspipe 2>/dev/null)"

# If Bash is available and this file was loaded interactively by another shell
# launched without command line arguments, continue execution as Bash.
test -z "${SHELL##*/bash}" -a -z "$BASH" -a -z "$*" -a "$PS1" && exec "$SHELL"

# Load ~/.bashrc for interactive Bash sessions.
test -z "$BASH" -o -z "$PS1" || . "$HOME/.bashrc"
