#!/usr/bin/env python3
"""
Usage: cmdecho TEXT...

Replace anything that appears to be a Windows-style environment variable then
echo the resulting text. This is similar to "echo" command when executing
cmd.exe.

Examples:
  cmdecho "%USERPROFILE%"
  cmdecho "SystemRoot=%SystemRoot%"
"""
import os
import re
import shlex
import sys


def split_commands(text):
    """
    Split a POSIX-shell-like script into individual commands respecting
    newlines, semicolons and quoting.

    Arguments:
    - text

    Return: A list of lists. Each inner list represents a command followed by
    any arguments.
    """
    text = text.strip()
    tokenizer = shlex.shlex(text, posix=True)
    tokenizer.whitespace = " \t"
    tokenizer.wordchars += "!@$%^*()-_+=[]{}\\:,.?/"
    commands = list()
    buffer = list()

    for token in tokenizer:
        if token not in ";\n":
            buffer.append(token)
        elif buffer:
            commands.append(buffer)
            buffer = list()

    if buffer:
        commands.append(buffer)

    return commands


def main(argv):
    strings = argv[1:]

    if not strings:
        print(f"Usage: {os.path.basename(argv[0])} TEXT...", file=sys.stderr)
        return 1

    variables = {}
    windows_env_file = os.environ.get("WINDOWS_ENV_FILE")

    if windows_env_file:
        try:
            with open(windows_env_file) as fd:
                contents = fd.read().strip()
        except IOError:
            contents = ""

        if contents:
            for assignment, in split_commands(contents):
                name, value = assignment.split("=", 1)
                name = name.lower()
                variables[name] = value

    if variables:
        pattern = re.compile(
            f"%({'|'.join(map(re.escape, variables))})%", re.IGNORECASE
        )

        for index, string in enumerate(strings):
            strings[index] = pattern.sub(
                lambda x: variables[x.group(0).lower()[1:-1]], string
            )

    print(*strings)


if __name__ == "__main__":
    sys.exit(main(sys.argv))
